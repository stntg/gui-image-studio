# Generated tkinter code for general
# Generated by GUI Image Studio

import base64
import tkinter as tk
from io import BytesIO

from PIL import Image, ImageTk

# Embedded image data
EMBEDDED_IMAGES = {
    "default": {
        "animation": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAABk/2T/ZGQAAABR5pM7AAAA"
            + "AXRSTlMAQObYZgAAAFFJREFUeJzt0LENwCAMRFFq9vsUTBBlH0awFG5KajsSNIlouPI19l1KJ7uSJemZ"
            + "g5UAcDvoUB0YFAcNmAPA9TW05VmLn/bYRbGtXntoMeHJrxkIADOt2oMzlQAAAABJRU5ErkJggg=="
        ),
        "button": (
            "iVBORw0KGgoAAAANSUhEUgAAAFAAAAAgCAYAAACFM/9sAAACOElEQVR4nO2aT0gUURzHvzuzrv/QXDdF"
            + "Vhk18mBtrkp76qKSCl1EIYVOQQadvImegg6C2K1DN8GOhYjeyoN5EWVdxWBVqG3VtTQXZ1UyNVmc6EG2"
            + "szO61Ugzw/w+MPD4vWF4fPj93jzeewBB6IlNLdjU+0r6/0MxB+P97TJnXPILJO98kv3YzuoUBCHFp6xH"
            + "JBJRZOJpBpK81CR6+eVLUcIk73yS/SgEEn8HCdQICdQICdQICdQICdSIHTry/KEPK9F9/FxQ8ZwNL6fW"
            + "sBr9hmcPbqJrMAAzoKvA+ImEp2PLrF3sysL9+ivoGw7CTBimhD+LB7icky6LufMz0dN6DU86qtDoLWKx"
            + "x3dvoPBSBmtnOnj03fOq74hYTWBlSS7Wtw9ksQZPEUZm1jEwuoTmajeL+UPbqCl3srZHyMN8eIdNAZYs"
            + "YTtnQ3dLJdvTODyO48VkWNY/PB2Br8KFqlInMtJ4FvN/ENF5+yreLGyiusyJ1wsb0BPDzIFqPGquwFw4"
            + "hongF9R5Clkstn8MSZKQl+2AKzddkbWWLWE1SguyEQiJSOM52PnfQ50NxdBxS0BwbRd6Y0iBW3tHuFPr"
            + "xuTiFnrbrqPFV4LD7/FTiYGPImrK8+EPiXoPVd8S7jpjrZe4lBnzf1L0O+wc3m98RXTvCJYW+C94y5ws"
            + "I4feyn84emE6ge9Wd9hjFAw5B5oJEqgREnjRAhOP7gglyX44tRN3kvjn58KKjQy6mZCaxGTjUt39IOSQ"
            + "H1wsPwAYB6sseOQNsQAAAABJRU5ErkJggg=="
        ),
        "circle": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAABH0lEQVR4nO3awQ7CIBAE0GE+qRf9/5Ne"
            + "+ksaDyaNaayFZYXMvLMUdrr1AABmZmZmZqaoZE94W5bH0W+u65q2rjJK0f8Ko4xaeFYQJbvwy7Icjr+v"
            + "a1oQBQnF/1L0mTAiQyjoWHxL4UdBRIVATFD83vOi/l84Q/E9Q+AsxfcKgTMV3yMEIkhW8dHzsXbgNvXs"
            + "4vfmre0CQhxnfftRXUCII8Rx5vaP+AwIcYQ4QhwhjhBHiCPEEeJ4dsB2L+7b7m2m7TrO7hUS4ghxrBk0"
            + "0mfQ0v4v7gBUGqELWt9+aAdkhxA1H1sGf6aeFULkMRlbF5MdQvQZIVsXlBlCjwNSIkjvEHqdDhcEk74f"
            + "8CZ9Q2RL9o7QJ9lbYjPcEzQzMzMzg6Yn12CjSJeSJ2AAAAAASUVORK5CYII="
        ),
        "colorful": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAABI0lEQVR4nO3YzU0DMRRF4eMj90QNiBUN"
            + "kUi0QCspgjUFGWXFCjKZzMQvunzbGVm+z79yGzAIJuEknISTcBJOwkk4Cdc5EK1v0spxfP7+rT1RWBuH"
            + "G67CfwV/kEJ4l/Br/i9dgOPKMAWL4N1DFCuCUzpfqAgSzmmjVmQWtDGWHoN7dHj+0SjhJJyEk3ASznk7"
            + "9vwT4Ox/BjBl1GqM/llj8UXox7jhUtQKhV+9BNaGqBb+pj3g2jAVw69eAtcsiarBNy3AI5NwEq5TRWP7"
            + "94bBxf1HwnValT2w7dDk5WwSTsJJOAkn4SSchJNw/YV3Kjjt0OaSbBJOwkk4CSfhJJyEk3D9mVcqOPG2"
            + "eZtLsrUPvqq8iU0h4SSchJNwEk7CSThnd2C2b2CUQCoS9YFgAAAAAElFTkSuQmCC"
        ),
        "icon": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAABOElEQVR4nO2ZsXHDMBAETzcowYkSF4E6"
            + "XIYiBS7GgSKV4TrQhhP3II0DhbZMAvx/8G9TkvjZJQkGBIQQQgghhHDhVI83OEJv+VqPrhHoLf+DZwR6"
            + "yz/wisAI8p4RGEXeKwIjyXtEYDR56wiMKG8ZgVHlrSIwsrxFBEaX3zoCZ5DfMgKRHM5y97d6CjiT/BYR"
            + "OJv86AicUX5kBM4qPyoCZ5YfEYGzy/dG4B7keyJwL/JrI3BP8msicG/ySyMcov+4GMG1fR1WB3hQT5fp"
            + "QrTr+alfWbporRXRaa39+1wiOURySs/FFec/jzdcepY3mVXQyW97wpL30HNWgTHfH29Pz3l5/4QVRHKI"
            + "5BDJIZJTehfYYre3nFV6Lh75nfeaRSSHSA6RHCI5xXonfjWYsQSaTRJCCCGEEAjFHe6tid6C7mbaAAAA"
            + "AElFTkSuQmCC"
        ),
        "info-icon": (
            "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAB4UlEQVR4nKXVz4uOURQH8M/zzutXkppM"
            + "UsrCypSJUrMxpZS1rCZlIcOIvT/BzpLCRk1KKZGxVGayMLFShtIkMVlZkCjm9epO5+rOnefNwqmn595z"
            + "vvd7z3N+PY210sFvbMc5HMdubAz7T3zEfdzAl+LMGmnCkGQarzGL0xjDrnjGQjcbmOnCkaYkG4r1DBYx"
            + "4d8yEdiZ2A9l0pJsHhti3w3bJpzFeWwJXbIJ7HxFuipTWCqA3eIzbuEp5nC7CE+JXQqOVRnGO4zXrodH"
            + "n7ET22K9tSVU48Ex3A3mFOCFAPQK4h+4gkeRyev4XmS2F7iF4JhKhCdwLW7MnjUB3otnUTbp4E30Wyqk"
            + "wR1cSIoPGC3Sn0Ei4CmTD/EEb7GjwnTiPRpcPmGkAuX3G5yM9Wa8xL4Bl48krqysJYPu4nKQDUXc1nVF"
            + "KYlwpcXDHKer+Box7FUdpcXDlWRcxqEB4E4Q9YtEfWvBNMGxnDb3MBmH+tWtR6IGs9fJi2MVYT+eyeBa"
            + "V9i5S5K8wKXi8EW8Ki7t1oU9qPVyP89FHaZx9SBa8HmF6Zatl9unFw2+B0fxK/QHsb/6xMXwvBekj/Ee"
            + "p3Irto2vwxVJmyRM6/jKpG0D9gwOFAM2rZNu4ID9y1gY/usX8Acp8XNm5s6S/gAAAABJRU5ErkJggg=="
        ),
        "logo": (
            "iVBORw0KGgoAAAANSUhEUgAAAMgAAAA8CAYAAAAjW/WRAAAEfUlEQVR4nO3cSyh8bxgH8MfgKCQblw1K"
            + "pEhRRLkWC8VCYYGyEplsbJRLpNgoiXLJFkkRua3ktkI2NkoikoWUywI1br+ep+b8zZh5cxn/32/O+X5K"
            + "znnPjJlT77fnfc4Z40MKNpvtTXUcwAg0TfNxd8zlAQQDzEhzERSL8wDCAWZlczH3HQKCcIDZ2ZwyoAcE"
            + "4QD4mAUJCMIB4MieiQ89CAD8xwfVA8A9VBAABQQEQAEBAVBAQAAUEBAABQQEQAEBAVDwIw/wt1rdHnsa"
            + "HvbESwB4341CVTCcIShgqiXWV8LxnccDeG1AvjvZERIwfEB+OskREjBsD/LVZhzNO3g7j1zmdTfZEQIw"
            + "TQVxVw0+E4KfPNedwsJCWl1dle3c3FzKycmhnp4e/XhnZyetr6/T1taW7M/Pz9PCwgL5+vpScHAwtbS0"
            + "UHh4uBxbXFykpaUlenh4oMbGRsrIyJDxvLw8SkxMlO37+3tqamqi1NRUh3H761dWVtLh4SENDQ3R8/Oz"
            + "vE57eztFRER8+xzBy++DfHaC8+N+s/fQNI3Ozs7o9fWVLBYLvb290cXFhYyz3d1d2tjYoLGxMfLz86Px"
            + "8XEJ08DAAN3e3tLKygqNjIzQ+fk5NTc30/T0tDzP399fxtnx8TF1dHTQ5OSkw/h73d3d1NfXJ8HjcA4O"
            + "DjqEFryPYe6kJyQk0MHBgWwfHR1RXFycfowndV1dnYSDlZWVUUBAgATq7u6OysvLJVg8sXnfldjYWLq6"
            + "ulK+h5ubG/5XTdnmilZRUeHBM4S/wTAByczMpO3tbdnm37xvd3JyQvHx8fp+YGAg9fb2SihiYmKooKBA"
            + "xtfW1mRiu7Kzs0NpaWnK99DQ0ED19fVSNfb39yklJcVDZwde/VGTfwH3DTMzM1RbW0t7e3tSJexeXl70"
            + "7ampKelLrq+v9aUU4yUZV5rhd8vGp6cnmfTcU/ASjp/7ftzOarVScnIyFRcXSz+yublJ/f39lJ+fL+8H"
            + "vJdhAhISEiIV4fLyUvaDgoL0Y1FRUbLs4saam+mSkhKZzHaPj4/U1tYmP6Ghofr4+16D+5bl5WWqqalx"
            + "2YNwL8M9DAeF/352djZVVVUhIGZeYn228f6/bg7ysmp0dJTS09MdxktLS6VB50rAZmdn5SoT44a+q6tL"
            + "JnNSUpKyQtl7HHdaW1v1gHIvExkZ6YGzAq+oIO6uRPGY6mrWb1zidScrK0sCMjEx4TBeVFREp6enVF1d"
            + "TWFhYbJvDwhXBe4veELPzc1Jf8JXopxFR0dLFeLG3nmJxVWDl1l86ZhDwhcA+O9zRQLvhjvpAJ78uLsn"
            + "lksIBxi2B/np5EY4wPBN+ncnOcIBprmK9dXJjnCAab+bF804GBW+vBrADJ/FAvgNCAiAAgICoICAACgg"
            + "IAAKCAiAAgICoICAACggIAAKCAiAAgICoICAACggIAAKCAiAAgICoICAAChYNE3zUT0AwKw4G6ggAAoS"
            + "EFQRAEf2TOgVBCEB+JgFhyUWQgJmpzll4EMPgpCAWWku5r4yDPhKICATUBWFP1LYwGgPq7V6AAAAAElF"
            + "TkSuQmCC"
        ),
        "square": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAjUlEQVR4nO3asW3DABTEUJrwRGqS/auk"
            + "0UrOCklcSADv9QT+9R9mZmZmZqbo8dfg+Dpe3Nz5ef56l8RJ3POd+Pg4uIvz+/xXJ3ESJ3ESJ3ESJ3ES"
            + "J3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ESJ3ES97ziLeVOJM6rD5iZmZmZGa7wA2Je"
            + "CbsYcrBvAAAAAElFTkSuQmCC"
        ),
        "triangle": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAA2UlEQVR4nO3asQ3DMAxEUflGUuPsX6Xy"
            + "Sgk0QRBYEknf/wsY1L3SrREREREREQXU+/vTApPz8eEPMOr9DH0IRX14HD2Ob+4CohXIef00AiIVyHn9"
            + "VAKiFMh5/XQCIhTIef2UAnYrkPP6aQXsVCDn9VML2KVAzuunF7BDgZzXLyFgtQI5r19GwEoFcl6/lIBV"
            + "CuS8fjkBKxTIef2SAmYrkPP6ZQXMVCDn9UsLmKVAzuuXFzBDgZzXf4SAuwrkvP5jBNxRIOf1R0cr+Gvb"
            + "r67r9fddRERERETNqy/NT3IKGGR8xQAAAABJRU5ErkJggg=="
        ),
    },
    "dark": {
        "animation": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABAAgMAAADXB5lNAAAADFBMVEUAAACWlpZkZGQAAACiAg7HAAAA"
            + "AXRSTlMAQObYZgAAAFFJREFUeJzt0LENwCAMRFFq9vsUTBBlH0awFG5KajsSNIlouPI19l1KJ7uSJemZ"
            + "g5UAcDvoUB0YFAcNmAPA9TW05VmLn/bYRbGtXntoMeHJrxkIADOt2oMzlQAAAABJRU5ErkJggg=="
        ),
        "button": (
            "iVBORw0KGgoAAAANSUhEUgAAAFAAAAAgCAYAAACFM/9sAAACMElEQVR4nO2aTctxQRjH/95i4Wx8AQsS"
            + "GyvsWWLBRtg6G9nY2PgAErFVXvIFlJU1xUJKyoas7EUhIuFppsjteG73k7vn0JlfneZynRnx6zpnmmYA"
            + "BkNMZI+SPM+f//9P+QzK5fIXZ/L7Dkze99z7kf3t5ng8fvJV0sNsNgsq8VqBTN5zbr1cfAkeYSbve+79"
            + "CAQy/g0m8EWYwBdhAl+ECXwRJvBFlBARvV6PQCAAhUKB4/GISqWCxWIBj8eDRqOBT0DUCuR5nkpLp9No"
            + "NpsIBoM07/V68SmIWoEcx0GlUtF4MBhgtVrB7/dDrVYjkUigWCwiEolAo9Fgt9tR2cvlEoVCAa1WCwaD"
            + "gY4tlUqYzWbSq8BarYZkMkklmUwmTCYT1Ot17Pd7ZLNZhEIhdLtdpFIp2l4qVKlUYjqd0jwRSfqJhagC"
            + "O50OFUjEhcNh+Hw+weK91+vRmLQWi4XG5/MZ/X7/mjcajZCcQI7j6B/fbDZot9vIZDJwuVw/GksEnk6n"
            + "6+fD4QBJVmAsFoNOp6OxVqvFfD6nsUwmoxdZuNvtdpoj7WUhT2Ztq9VKY4fDgdFoJL1JZL1eo1qtUomk"
            + "gkhFkUmCQB7peDxO75P3o9PppO/Fy33S32azwe12Y7vdXvOSm4WHwyG97snn89c4l8s9HFsul/EOsJWI"
            + "FAVGo1G8Cx8p8J1gAl+ECfxtgbdbdwwh937kj3bcmcSf7wsLjnawkwnPuS02+bOzH4yvMD/4Xf4AG+rd"
            + "w7teVAoAAAAASUVORK5CYII="
        ),
        "icon": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAACoElEQVR4nO1bS47DIAwFixNlMz1QVzlQ"
            + "VnOgzCZX6ijSRIooHxs/UzLtWyZg/GzzMR/nPvjAFOu6Pl5RlwtvJThW/na7eQ1xSX0JPFpgzWs1Itr6"
            + "UniUIEm4pkhIwx1lCK8VoOmnBwmEjMsYYNu2aplpmroZIDhjxIQ55FrqtMJbef8ggVC+JksTBcGBgSR+"
            + "4JBlITugBFko18MQQS3hTyFL4iVDaNslbf/vTf6Mvd29fc00ShoFXkk+NkIrPLdgbOURyJf04c4MvnWK"
            + "G4k8R6+cQQKyES6+t6/sv/v0o+4OEv28xPsa8iXSaGPk9ExFQXDGaCEe19VEhXgWWIHe15DXyMnNDClu"
            + "5IyAIm8lL2mAFeR9K2UlcrlRQA4MK/JW8j3S+xLlvmf/NCLflwd7ScsdGGszQjh/6LENnSIe/5MYogXn"
            + "6ZBQQjneL5GXlkN1Beqx9y4h31qei5gjlQqg1vytZBBGqGWL5C4w8qPaTUU4cQu2QutFq65gvhIcDTmn"
            + "krTCfwPlfvRYE/REjg+5NwdZe1+7qkOuClnp8NpA3nLDwrpdKpHXbjlrvYjwfryYM0+HUWSsE6InA6zK"
            + "fs8JRy4pTjlN+J+5ht7p8EFOux+gwXmN488/em+KtAK1GWKSDlvPCFr51XQ4BelsYGUEiVxu1JJVDoA2"
            + "AkIeOx1OoWVNgDKCVI5kzAqpj8gZ4VC+59lgCrnI9rkKFgek1qfD0oPR5gsSV7gfoL4gUcOyLI+RjLCT"
            + "n+dZzIdaG0QlSq8krzLAHmIjGEFDHpINvtIIiLEoIBQ5G6HHuDDcTVHr+7wHLGR7rYDSeqHHbfFh3wtM"
            + "UUTE30d5LxCcMWLl0S9GLvloKhW+l300FYNDpKT8ZZ/NIR8/9nw46d796ewH7s3xC81E3OqtN8m2AAAA"
            + "AElFTkSuQmCC"
        ),
        "logo": (
            "iVBORw0KGgoAAAANSUhEUgAAAMgAAAA8CAYAAAAjW/WRAAAEiUlEQVR4nO3cSyi0bRgH8GscioVDsXBO"
            + "lOazUKwcvh1CWQhlIyklSR+JUCyUBVa8WCk5paSwoBRlIznkkMg4LCjZYCEi57frqnk+M2buHGbe3pnn"
            + "/yt5nvsez8zU/Xff1/1MYyAFo9H4puoHcAcmk8lgr89mB4IBemSyERQP6waEA/TKaGPsWwQE4QC9M1pl"
            + "QAsIwgHwMQsSEIQDwJI5Ex9qEAD4nwGzB4B9mEEAFBAQAAUEBEABAQFQQEAAFBAQAAUEBEDBixzg3//2"
            + "7fYt/frHEU8B4Ho3ClXBsIaggK6WWF8Jx3ceD+CyAfnuYEdIwO0D8tNBjpCA29YgXy3GUbyDq3PINq+9"
            + "wY4QgG5mEHuzwWdC8JO/tWd8fJyKiorkeHJyktbW1qi9vV3rr6uro9TUVMrPz5fz7OxsysrKopeXF7q9"
            + "vaXe3l66vLyUvszMTPnx9fWlgYEB2tra0q57eHgox9zX399Pu7u7Fu1sZWWFpqenKTY2lkpLS8nLy0ue"
            + "p6urS3sO0OF9kM8OcH6cM2uPp6cnioiIIA8PD3p9fSWDwUAhISHSzhITEyklJYXq6+vp+fmZCgsLqbq6"
            + "mlpaWiggIIDS09OpoaGBwsPDqbm5mSoqKrTrNjY2ynF0dLSErqqqyqL9vZqaGmptbZVQpKWlUVlZGXV0"
            + "dDjtfYPzuc2d9OPjY4qLi5PjmJgYOjk50fp4FhkdHZVwsNnZWXp4eJBA+fn50czMDL29vcnA5nNbTk9P"
            + "KSgoSPkaOGze3t5yvLq6KtcF1+Y2Adnc3KSkpCQ55t98bhYVFWURmPv7e2pra5PZ5uzsjJaWlqSd/+vz"
            + "Us0WnoV2dnaUr2F4eJg6OztldoqPj6e9vT0HvTtw6Y+a/A24bsjNzaWxsTFKSEiQWcLM09NTO87Ly6Pk"
            + "5GQKDAzUllIsNDSUCgoKqKmpSWvj2YDrGv57XsJVVlZatJsNDg7yl47RwsKC1CN8/fLyclpeXpbXA67L"
            + "bQJyc3MjM0JwcLCc393daX3n5+dSQxwdHUkxPT8/TyMjI1q/j4+P1CDd3d10fX2ttb+vNTg8GRkZNDEx"
            + "YbMG4eVVWFgY7e/vS1DW19epr68PAdHzEuuzhfefujm4sbFBJSUltL29bdE+NzdHxcXFsrvEeKbhMDEu"
            + "6Gtra2lqaooODg7sXpuvaa5xbOEahkNjDijXMhcXFw56Z/DXzyD2dqK4TbWb5YwtXnv4vzYHhHea3ltc"
            + "XKTIyEjZ2r26upJz3oZlvIPFNYu/vz/l5ORIfcI7Uda4VuFZiANlvcTiWWNoaIh6enpkifb4+CgB5G1e"
            + "cG24kw7gyI+7O2K5hHCA29YgPx3cCAe4fZH+3UGOcIBudrG+OtgRDtDtd/OiGAd3hS+vBtDDZ7EAnAEB"
            + "AVBAQAAUEBAABQQEQAEBAVBAQAAUEBAABQQEQAEBAVBAQAAUEBAABQQEQAEBAVBAQAAUEBAABQ+TyWRQ"
            + "PQBArzgbmEEAFCQgmEUALJkzoc0gCAnAxyxYLLEQEtA7k1UGPtQgCAnolcnG2FeGAV8JBKQDqknhN2DS"
            + "x+gqQOWTAAAAAElFTkSuQmCC"
        ),
    },
    "light": {
        "button": (
            "iVBORw0KGgoAAAANSUhEUgAAAFAAAAAgCAYAAACFM/9sAAACcklEQVR4nO2av0tyURjHv9qri4H4Lyg2"
            + "GPUPJInoKC6ioINDkmQgSOCgIiIIzk5OkuIQ4a/FRURwUCMcosWmXAQRHE0CtXw5BxR/lPZyw17tfOBy"
            + "f5znXi4fnufcyzkHYDB+Et5HF/P5/Hjzr7Id6HS6OWf8xQAmbzWLfnifNSqVyjWP+n1UKpWlTJxmIJO3"
            + "nlkvE19LJczkrWbRz5JAxr/BBHKECeQIE8gRJpAjTCBHmECO/MEGUalUUCgU4PF4GI1GcLlc9Hyb2ahA"
            + "gUCAaDRKj5+fnxEKhXB9fY1t5sdKWCaTod1uo9lswm63w2Kx4ObmZtqu1Wrn4ifnqVQKVquVbvf39+j1"
            + "eggEAnA6nbi4uECj0djdDJylXq/j4OAA6XQal5eXkEqlVKLZbMYqYrEYstksut0u4vE4SqUSTCYTDg8P"
            + "0el04Ha7kUwmsZMCh8MhHA4HPRaJRPB6vRCLxSgWi6hWq+j3+5/e+/7+TvcnJycIBoMwGAw08/R6PVqt"
            + "1jTu9fWVxvL5/N3uAyeQD4larYbRaEQmk1kSRiBlSuQT/H4/Hh4ecHt7i0KhgLe3N0QiEQiFQnrP4+Pj"
            + "xuT9F78xT09P0Gg0GAwGU0mE/f192j8SiCjy5X55eaEZfHR0RLOvVqvh+PgY5XKZxt3d3SGRSPyOPnAC"
            + "KcXz83PI5XIqjUgkmXp1dQWfzweJREL7N5JhpJ2UsM1mw3g8xtnZGU5PTxEOh5HL5bC3twePx4NNwlsc"
            + "IGTjgV8fmSaj0j9ewtsOE8gRJpAjTOB3C5ydumMss+iH/9GMO5P49XnhpaUdbGXCemaTjb9u7QdjHuYH"
            + "38tfzv/pXrKrcg0AAAAASUVORK5CYII="
        ),
        "icon": (
            "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAACoElEQVR4nO1bW47DIAwEixOxV8qxeqXl"
            + "Sl1F2kiIJcGPMSXbzlfVwOAx5mESQvjgA1fknJ+vqMtF9CJujS+lRItwSX0JIppw1GsjIdb6UkQUkSRc"
            + "eyKk4Y5yRLQSWMbpIQLBoUUKk5Fzrn93hZdSptmTZgrmitPU0SJaKl+F7iECYfyIyzIMUgADKfzAweXB"
            + "nVBEHsbNcEQyM/waNHPiqh1hbZes43+2+Bp7u3v7lmWULAa8UnzrBC0it2Dr5RXEX9nDXRmidolbSTzH"
            + "rjOHJGQjXHxfhOyXgfsYDhL7oqT3LeKvRKOdcWZnLwpScIZGeFvXEhXiVSADe98i3sJztjL0tFFwAkq8"
            + "F1/XARnU+17GSni5UUABDC/xXvwR2fsS4+Lj8WdGfm4be0vLnRhHK0Kq/5hyDN0R3j6TOEKDejkkFCmn"
            + "96/ES8uhhgLNOHuXiNeW56LVSFcFUHt+rRiEE0bZIoUbzPyodnsRTtyCWlh70WsouO8EV8NZp5K0wn8D"
            + "nT2YsSeYiTM9FN4c5N371l0dclfISoezQrzngYV3uzT4qsN05GztRUTvt5s593QYJcY7IfrjgGwc95xw"
            + "5IrilLOEf601zU6HD3HW8wAL6j1OrB/MPhTRAnUY4pIOe68IVv5hOtyDdDXwcoKElxu15JUDoJ2A4GOn"
            + "wz1o9gQoJ0h5JHMWeWeCu/FaR1jqurwdLoq3rwdqIV5vh3dA3g73UC+Rd/g+wPyBxAjbtj1XcsIu/qE4"
            + "PiNtg6hE6ZXirQ6IKzjBIh6SDb7SCYi5KCEMqZ0wY15Y7ktR7+95D3hwRyvBVQY542vxZS9MlCYi2v9X"
            + "uS+QgjNa4zkT5sz9RUQRaU6TmjfR97w01YIj5Mr4216bQ15+nHlxMrz71dkPwpvjB/pb4LBRxeEjAAAA"
            + "AElFTkSuQmCC"
        ),
    },
}


def load_image(name, theme="default", size=None):
    """Load an embedded image by name and optional theme."""
    if theme not in EMBEDDED_IMAGES:
        raise ValueError(f"Theme {theme} not found")
    if name not in EMBEDDED_IMAGES[theme]:
        raise ValueError(f"Image {name} not found in theme {theme}")

    # Decode base64 data
    image_data = EMBEDDED_IMAGES[theme][name]
    if isinstance(image_data, tuple):
        image_data = "".join(image_data)

    decoded = base64.b64decode(image_data)
    image = Image.open(BytesIO(decoded))

    # Resize if requested
    if size:
        image = image.resize(size, Image.Resampling.LANCZOS)

    return ImageTk.PhotoImage(image)


# Usage Examples
if __name__ == "__main__":
    root = tk.Tk()
    root.title("Image Demo")

    # General image usage
    image = load_image("animation", "default", size=(100, 100))
    label = tk.Label(root, image=image)
    label.pack(pady=20)

    root.mainloop()
